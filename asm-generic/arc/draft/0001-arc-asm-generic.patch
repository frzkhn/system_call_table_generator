From 928ad60659a55073e9fb2860d798ded95458322a Mon Sep 17 00:00:00 2001
From: Firoz Khan <firozk@codeaurora.org>
Date: Wed, 9 Jan 2019 19:38:19 +0530
Subject: [PATCH] arc: asm-generic

---
 arch/arc/Makefile                  |  3 +++
 arch/arc/include/asm/Kbuild        |  1 +
 arch/arc/include/uapi/asm/Kbuild   |  1 +
 arch/arc/include/uapi/asm/unistd.h | 30 ++++++++++++----------------
 arch/arc/kernel/sys.c              |  8 +++++++-
 arch/arc/kernel/syscalls/Makefile  | 41 ++++++++++++++++++++++++++++++++++++++
 6 files changed, 66 insertions(+), 18 deletions(-)
 create mode 100644 arch/arc/kernel/syscalls/Makefile

diff --git a/arch/arc/Makefile b/arch/arc/Makefile
index df00578..f8958f0 100644
--- a/arch/arc/Makefile
+++ b/arch/arc/Makefile
@@ -104,3 +104,6 @@ $(boot_targets): vmlinux
 
 archclean:
 	$(Q)$(MAKE) $(clean)=$(boot)
+
+archheaders:
+	$(Q)$(MAKE) $(build)=arch/c6x/kernel/syscalls all
diff --git a/arch/arc/include/asm/Kbuild b/arch/arc/include/asm/Kbuild
index feed50c..53525d5 100644
--- a/arch/arc/include/asm/Kbuild
+++ b/arch/arc/include/asm/Kbuild
@@ -1,4 +1,5 @@
 # SPDX-License-Identifier: GPL-2.0
+generated-y += syscall_table.h
 generic-y += bugs.h
 generic-y += compat.h
 generic-y += device.h
diff --git a/arch/arc/include/uapi/asm/Kbuild b/arch/arc/include/uapi/asm/Kbuild
index 0febf1a..97823ec 100644
--- a/arch/arc/include/uapi/asm/Kbuild
+++ b/arch/arc/include/uapi/asm/Kbuild
@@ -1,4 +1,5 @@
 include include/uapi/asm-generic/Kbuild.asm
 
+generated-y += unistd_32.h
 generic-y += kvm_para.h
 generic-y += ucontext.h
diff --git a/arch/arc/include/uapi/asm/unistd.h b/arch/arc/include/uapi/asm/unistd.h
index 3b3543f..c90f02d 100644
--- a/arch/arc/include/uapi/asm/unistd.h
+++ b/arch/arc/include/uapi/asm/unistd.h
@@ -23,26 +23,22 @@
 #define __ARCH_WANT_SYS_VFORK
 #define __ARCH_WANT_SYS_FORK
 
-#define sys_mmap2 sys_mmap_pgoff
+#include <asm/bitsperlong.h>
 
-#include <asm-generic/unistd.h>
-
-#define NR_syscalls	__NR_syscalls
-
-/* Generic syscall (fs/filesystems.c - lost in asm-generic/unistd.h */
-#define __NR_sysfs		(__NR_arch_specific_syscall + 3)
+#ifndef __SYSCALL
+#define __SYSCALL(x, y)
+#endif
 
-/* ARC specific syscall */
-#define __NR_cacheflush		(__NR_arch_specific_syscall + 0)
-#define __NR_arc_settls		(__NR_arch_specific_syscall + 1)
-#define __NR_arc_gettls		(__NR_arch_specific_syscall + 2)
-#define __NR_arc_usr_cmpxchg	(__NR_arch_specific_syscall + 4)
+#if __BITS_PER_LONG == 32
+#define __NR_cacheflush		__NR_arch_specific_syscall0
+#define __NR_arc_settls		__NR_arch_specific_syscall1
+#define __NR_arc_gettls		__NR_arch_specific_syscall2
+#define __NR_sysfs		__NR_arch_specific_syscall3
+#define __NR_arc_usr_cmpxchg	__NR_arch_specific_syscall4
+#include <asm/unistd_32.h>
+#endif
 
-__SYSCALL(__NR_cacheflush, sys_cacheflush)
-__SYSCALL(__NR_arc_settls, sys_arc_settls)
-__SYSCALL(__NR_arc_gettls, sys_arc_gettls)
-__SYSCALL(__NR_arc_usr_cmpxchg, sys_arc_usr_cmpxchg)
-__SYSCALL(__NR_sysfs, sys_sysfs)
+#define NR_syscalls	__NR_syscalls
 
 #undef __SYSCALL
 
diff --git a/arch/arc/kernel/sys.c b/arch/arc/kernel/sys.c
index fddecc7..1108007 100644
--- a/arch/arc/kernel/sys.c
+++ b/arch/arc/kernel/sys.c
@@ -7,11 +7,17 @@
 #include <asm/syscalls.h>
 
 #define sys_clone	sys_clone_wrapper
+#define sys_mmap2	sys_mmap_pgoff
 
 #undef __SYSCALL
 #define __SYSCALL(nr, call) [nr] = (call),
 
 void *sys_call_table[NR_syscalls] = {
 	[0 ... NR_syscalls-1] = sys_ni_syscall,
-#include <asm/unistd.h>
+#define sys_arch_specific_syscall0	sys_cacheflush
+#define sys_arch_specific_syscall1	sys_arc_settls
+#define sys_arch_specific_syscall2	sys_arc_gettls
+#define sys_arch_specific_syscall3	sys_sysfs
+#define sys_arch_specific_syscall4	sys_arc_usr_cmpxchg
+#include <asm/syscall_table.h>
 };
diff --git a/arch/arc/kernel/syscalls/Makefile b/arch/arc/kernel/syscalls/Makefile
new file mode 100644
index 0000000..824c09f
--- /dev/null
+++ b/arch/arc/kernel/syscalls/Makefile
@@ -0,0 +1,41 @@
+# SPDX-License-Identifier: GPL-2.0
+kapi := arch/$(SRCARCH)/include/generated/asm
+uapi := arch/$(SRCARCH)/include/generated/uapi/asm
+
+_dummy := $(shell [ -d '$(uapi)' ] || mkdir -p '$(uapi)')	\
+	  $(shell [ -d '$(kapi)' ] || mkdir -p '$(kapi)')
+
+syscall := $(srctree)/scripts/syscalls/syscall.tbl
+syshdr := $(srctree)/scripts/syscallhdr.sh
+systbl := $(srctree)/scripts/syscalltbl.sh
+
+quiet_cmd_syshdr = SYSHDR  $@
+      cmd_syshdr = $(CONFIG_SHELL) '$(syshdr)' '$<' '$@'	\
+		   '$(syshdr_abis_$(basetarget))'		\
+		   '$(syshdr_pfx_$(basetarget))'		\
+		   '$(syshdr_offset_$(basetarget))'
+
+quiet_cmd_systbl = SYSTBL  $@
+      cmd_systbl = $(CONFIG_SHELL) '$(systbl)' '$<' '$@'	\
+		   '$(systbl_abis_$(basetarget))'		\
+		   '$(systbl_abi_$(basetarget))'		\
+		   '$(systbl_offset_$(basetarget))'
+
+syshdr_abis_unistd_32 := common,32,rename,stat64,mmu
+$(uapi)/unistd_32.h: $(syscall) $(syshdr)
+	$(call if_changed,syshdr)
+
+systbl_abis_syscall_table := common,32,rename,stat64,mmu
+systbl_abi_syscall_table := 32
+$(kapi)/syscall_table.h: $(syscall) $(systbl)
+	$(call if_changed,systbl)
+
+uapisyshdr-y		+= unistd_32.h
+kapisyshdr-y		+= syscall_table.h
+
+targets	+= $(uapisyshdr-y) $(kapisyshdr-y)
+
+PHONY += all
+all: $(addprefix $(uapi)/,$(uapisyshdr-y))
+all: $(addprefix $(kapi)/,$(kapisyshdr-y))
+	@:
-- 
1.9.1

