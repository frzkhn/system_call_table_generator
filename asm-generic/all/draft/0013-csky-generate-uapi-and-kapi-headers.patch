From c4634493d0d83653d984f557b3f84e7414da51d3 Mon Sep 17 00:00:00 2001
From: Firoz Khan <firozk@codeaurora.org>
Date: Tue, 19 Feb 2019 15:27:55 +0530
Subject: [PATCH 13/27] csky: generate uapi and kapi headers

Unified system call table generation script need to be invoked
to generated the uapi and kapi headers. The Makefile changes
present in this patch will invoke the scripts and generate uapi
and kapi header files.

The generated files - unistd_*.h and syscall_table_*.h files
will be included by unistd.h and sys_c6x.c files by replacing
asm-generic/unistd.h file.
---
 arch/csky/Makefile                  |  3 +++
 arch/csky/include/asm/Kbuild        |  1 +
 arch/csky/include/uapi/asm/Kbuild   |  1 +
 arch/csky/include/uapi/asm/unistd.h | 16 +++++++++++-----
 arch/csky/kernel/syscall_table.c    |  4 +++-
 5 files changed, 19 insertions(+), 6 deletions(-)

diff --git a/arch/csky/Makefile b/arch/csky/Makefile
index 3607a6e..f4d2e30 100644
--- a/arch/csky/Makefile
+++ b/arch/csky/Makefile
@@ -79,6 +79,9 @@ zImage Image uImage: vmlinux
 archclean:
 	$(Q)$(MAKE) $(clean)=$(boot)
 
+archheaders:
+	$(Q)$(MAKE) $(build)=arch/csky/kernel/syscalls all
+
 define archhelp
   echo  '* zImage       - Compressed kernel image (arch/$(ARCH)/boot/zImage)'
   echo  '  Image        - Uncompressed kernel image (arch/$(ARCH)/boot/Image)'
diff --git a/arch/csky/include/asm/Kbuild b/arch/csky/include/asm/Kbuild
index 2a0abe8..5b5979b 100644
--- a/arch/csky/include/asm/Kbuild
+++ b/arch/csky/include/asm/Kbuild
@@ -1,3 +1,4 @@
+generated-y += syscall_table.h
 generic-y += asm-offsets.h
 generic-y += bugs.h
 generic-y += clkdev.h
diff --git a/arch/csky/include/uapi/asm/Kbuild b/arch/csky/include/uapi/asm/Kbuild
index c1b06dc..3f03cf6 100644
--- a/arch/csky/include/uapi/asm/Kbuild
+++ b/arch/csky/include/uapi/asm/Kbuild
@@ -1,3 +1,4 @@
 include include/uapi/asm-generic/Kbuild.asm
 
+generated-y += unistd_32.h
 generic-y += ucontext.h
diff --git a/arch/csky/include/uapi/asm/unistd.h b/arch/csky/include/uapi/asm/unistd.h
index 224c9a9..75266c8 100644
--- a/arch/csky/include/uapi/asm/unistd.h
+++ b/arch/csky/include/uapi/asm/unistd.h
@@ -2,9 +2,15 @@
 // Copyright (C) 2018 Hangzhou C-SKY Microsystems co.,ltd.
 
 #define __ARCH_WANT_SYS_CLONE
-#include <asm-generic/unistd.h>
 
-#define __NR_set_thread_area	(__NR_arch_specific_syscall + 0)
-__SYSCALL(__NR_set_thread_area, sys_set_thread_area)
-#define __NR_cacheflush		(__NR_arch_specific_syscall + 1)
-__SYSCALL(__NR_cacheflush, sys_cacheflush)
+#include <asm/bitsperlong.h>
+
+#ifndef __SYSCALL
+#define __SYSCALL(x, y)
+#endif
+
+#if __BITS_PER_LONG == 32
+#define __NR_set_thread_area	__NR_arch_specific_syscall
+#define __NR_cacheflush		__NR_arch_specific_syscall1
+#include <asm/unistd_32.h>
+#endif
diff --git a/arch/csky/kernel/syscall_table.c b/arch/csky/kernel/syscall_table.c
index a0c238c..06f650f 100644
--- a/arch/csky/kernel/syscall_table.c
+++ b/arch/csky/kernel/syscall_table.c
@@ -10,5 +10,7 @@
 #define sys_fadvise64_64 sys_csky_fadvise64_64
 void * const sys_call_table[__NR_syscalls] __page_aligned_data = {
 	[0 ... __NR_syscalls - 1] = sys_ni_syscall,
-#include <asm/unistd.h>
+#define sys_arch_specific_syscall	sys_set_thread_area
+#define sys_arch_specific_syscall1	sys_cacheflush
+#include <asm/syscall_table.h>
 };
-- 
1.9.1

